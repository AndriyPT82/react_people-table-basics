{"version":3,"sources":["components/Header/Header.jsx","components/HomePage/HomePage.jsx","api/people.js","components/PersonRow/PersonRow.jsx","components/PeopleTable/PeopleTable.jsx","components/PeoplePage/PeoplePage.jsx","components/NotFoundPage/NotFoundPage.jsx","App.jsx","index.jsx"],"names":["Header","className","to","exact","HomePage","a","fetch","people","json","PersonRow","name","sex","born","died","motherName","fatherName","columnNames","PeopleTable","map","key","person","slug","PeoplePage","useState","setPeople","useEffect","getPeople","then","list","mother","find","obj","father","findParents","length","CircularProgress","NotFoundPage","App","path","from","ReactDOM","render","document","getElementById"],"mappings":"4RAKaA,G,MAAS,kBACpB,yBAAKC,UAAU,UACb,kBAAC,IAAD,CAASC,GAAG,IAAID,UAAU,WAAWE,OAAK,GAA1C,aAGA,kBAAC,IAAD,CAASD,GAAG,UAAUD,UAAU,WAAWE,OAAK,GAAhD,aCRSC,EAAW,kBACtB,0C,6FCFK,4BAAAC,EAAA,sEACgBC,MACnB,qEAFG,cACCC,EADD,yBAKEA,EAAOC,QALT,4C,sBCEA,IAAMC,EAAY,SAAC,GAAD,IACrBC,EADqB,EACrBA,KAAMC,EADe,EACfA,IAAKC,EADU,EACVA,KAAMC,EADI,EACJA,KAAMC,EADF,EACEA,WAAYC,EADd,EACcA,WADd,OAGvB,oCACE,4BAAKL,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,KCNHC,G,MAAc,CAAC,OAAQ,MAAO,OAAQ,OAAQ,SAAU,WAEjDC,EAAc,SAAC,GAAD,IAAGV,EAAH,EAAGA,OAAH,OACzB,oCACE,6CACA,+BACE,+BACE,4BACGS,EAAYE,KAAI,SAAAR,GAAI,OAAI,wBAAIS,IAAKT,GAAOA,QAG7C,+BACGH,EAAOW,KAAI,SAAAE,GAAM,OAChB,wBAAInB,UAAU,SAASkB,IAAKC,EAAOC,MACjC,kBAAC,EAAcD,QAIrB,+BACE,4BACGJ,EAAYE,KAAI,SAAAR,GAAI,OAAI,wBAAIS,IAAKT,GAAOA,WCX5C,IAAMY,EAAa,WACxB,MAA4BC,mBAAS,IAArC,mBAAOhB,EAAP,KAAeiB,EAAf,KAQA,OANAC,qBAAU,YHjBL,WAAP,gCGkBIC,GAAYC,MAAK,SAACnB,GAChBgB,EAAUhB,EAAKU,KAAI,SAAAE,GAAM,OAd/B,SAAqBA,EAAQQ,GAC3B,IAAMC,EAASD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIrB,OAASU,EAAON,cAC9CkB,EAASJ,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIrB,OAASU,EAAOL,cAEpD,OAAO,2BACFK,GADL,IACaS,SAAQG,WASYC,CAAYb,EAAQZ,YAElD,IAEKD,EAAO2B,OAEX,kBAAC,EAAD,CAAa3B,OAAQA,IADrB,kBAAC4B,EAAA,EAAD,OCvBOC,EAAe,kBAC1B,6CCuBaC,G,MAhBH,kBACV,yBAAKpC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqC,KAAK,IAAInC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOmC,KAAK,UAAUnC,OAAK,GACzB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAUoC,KAAK,QAAQrC,GAAG,IAAIC,OAAK,IACnC,kBAAC,EAAD,UCfNqC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e5d4282e.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Header.scss';\n\nexport const Header = () => (\n  <div className=\"header\">\n    <NavLink to=\"/\" className=\"nav-link\" exact>\n      Home page\n    </NavLink>\n    <NavLink to=\"/people\" className=\"nav-link\" exact>\n      People\n    </NavLink>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage = () => (\n  <h1>Home Page</h1>\n);\n","\nexport async function getPeople() {\n  const people = await fetch(\n    'https://mate-academy.github.io/react_people-table/api/people.json',\n  );\n\n  return people.json();\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PersonRow = (\n  { name, sex, born, died, motherName, fatherName },\n) => (\n  <>\n    <td>{name}</td>\n    <td>{sex}</td>\n    <td>{born}</td>\n    <td>{died}</td>\n    <td>{motherName}</td>\n    <td>{fatherName}</td>\n  </>\n);\n\nPersonRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string.isRequired,\n  born: PropTypes.number.isRequired,\n  died: PropTypes.number.isRequired,\n  motherName: PropTypes.string.isRequired,\n  fatherName: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PersonRow } from '../PersonRow';\nimport './PeopleTable.scss';\n\nconst columnNames = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\nexport const PeopleTable = ({ people }) => (\n  <>\n    <h2>People Table!</h2>\n    <table>\n      <thead>\n        <tr>\n          {columnNames.map(name => <th key={name}>{name}</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <tr className=\"Person\" key={person.slug}>\n            <PersonRow {...person} />\n          </tr>\n        ))}\n      </tbody>\n      <tfoot>\n        <tr>\n          {columnNames.map(name => <th key={name}>{name}</th>)}\n        </tr>\n      </tfoot>\n    </table>\n  </>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { getPeople } from '../../api/people';\nimport { PeopleTable } from '../PeopleTable';\n\nfunction findParents(person, list) {\n  const mother = list.find(obj => obj.name === person.motherName);\n  const father = list.find(obj => obj.name === person.fatherName);\n\n  return {\n    ...person, mother, father,\n  };\n}\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    getPeople().then((json) => {\n      setPeople(json.map(person => findParents(person, json)));\n    });\n  }, []);\n\n  return !people.length\n    ? <CircularProgress />\n    : <PeopleTable people={people} />;\n};\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <h2>NotFoundPage</h2>\n);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport { Header } from './components/Header';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n      <Route path=\"/people\" exact>\n        <PeoplePage />\n      </Route>\n      <Redirect from=\"/home\" to=\"/\" exact />\n      <NotFoundPage />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}